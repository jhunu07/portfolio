// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI agent for refining personal statements.
 *
 * - refinePersonalStatement - A function that refines a personal statement.
 * - RefinePersonalStatementInput - The input type for the refinePersonalStatement function.
 * - RefinePersonalStatementOutput - The return type for the refinePersonalStatement function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RefinePersonalStatementInputSchema = z.object({
  statement: z
    .string()
    .describe('The personal statement to be refined.'),
});
export type RefinePersonalStatementInput = z.infer<typeof RefinePersonalStatementInputSchema>;

const RefinePersonalStatementOutputSchema = z.object({
  refinedStatement: z.string().describe('The refined personal statement with improved clarity, impact, and grammar.'),
  suggestions: z.array(z.string()).describe('Specific suggestions for improving the original statement.'),
});
export type RefinePersonalStatementOutput = z.infer<typeof RefinePersonalStatementOutputSchema>;

export async function refinePersonalStatement(input: RefinePersonalStatementInput): Promise<RefinePersonalStatementOutput> {
  return refinePersonalStatementFlow(input);
}

const refinePersonalStatementPrompt = ai.definePrompt({
  name: 'refinePersonalStatementPrompt',
  input: {schema: RefinePersonalStatementInputSchema},
  output: {schema: RefinePersonalStatementOutputSchema},
  prompt: `You are an expert personal statement editor. Refine the following personal statement to improve its clarity, impact, and grammar. Provide specific suggestions for improvement.

Original Statement: {{{statement}}}

Refined Statement:`, // Removed triple curly braces from suggestions
});

const refinePersonalStatementFlow = ai.defineFlow(
  {
    name: 'refinePersonalStatementFlow',
    inputSchema: RefinePersonalStatementInputSchema,
    outputSchema: RefinePersonalStatementOutputSchema,
  },
  async input => {
    const {output} = await refinePersonalStatementPrompt(input);
    return output!;
  }
);
